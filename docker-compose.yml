models:
  image: tp33/django
  container_name: models
  external_links:
    - mysql:db
  entrypoint: ./startup.sh
  volumes:
    - ./models:/app
  ports:
    - "8001:8000"
  command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./app-microservices/wsgi.py"

exp:
  image: tp33/django
  container_name: exp
  links:
    - models:models-api
    - kafka:kafka
    - es:es
  ports:
    - "8002:8000"
  volumes:
    - ./exp:/app
  command: "mod_wsgi-express start-server --reload-on-changes ./exp/wsgi.py"

web:
  image: tp33/django
  container_name: web
  links:
    - exp:exp-api
    - nginx:nginx
  ports:
    - "8000:8000"
  volumes:
    - ./web:/app
  command: "mod_wsgi-express start-server --reload-on-changes ./web/wsgi.py"

web2: #for load balancing
  image: tp33/django
  container_name: web2
  links:
    - exp:exp-api
    - nginx:nginx
  ports:
    - "8003:8000"
  volumes:
    - ./web:/app
  command: "mod_wsgi-express start-server --reload-on-changes ./web/wsgi.py"

kafka:
  image: spotify/kafka
  container_name: kafka
  environment:
    ADVERTISED_HOST: kafka
    ADVERTISED_PORT: 9092
  hostname: kafka
   
es:
  image: elasticsearch:2.0
  container_name: es
  ports:
    - "9200:9200"

batch:
  image: tp33/django
  container_name: batch
  links:
    - kafka:kafka
    - es:es
  volumes:
    - ./:/app
  entrypoint: ./startES.sh
  #command: "python esScript.py" #<run a python script that pulls messages from Kafka and indexs that in ES>

haproxy:
  image: haproxy:1.8
  container_name: haproxy
  links:
    - web:web-api
    - web2:web-api2
  ports:
    - "80:80"
  volumes:
    - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

selenium-chrome:
  image: selenium/standalone-chrome
  container_name: selenium-chrome
  links:
    - web:web
  ports:
    - "4444:4444"

selenium-test:
  image: tp33/django
  container_name: selenium-test
  links:
    - selenium-chrome:selenium-chrome
    - web:web
  volumes:
    - ./app/selenium:/app
  command: bash -c "sleep 10 && pip install selenium==3.141.0 && python selenium_test.py"

nginx:
  image: nginx:1.15.7
  container_name: nginx
  volumes:
    - ./web/web_frontend/static:/usr/share/nginx/html:ro
  ports:
    - "8081:80"
